{"version":3,"sources":["Config.js","auth/index.js","auth/PrivateRoute.js","core/category/apiCategory.js","core/category/List.js","core/space/apiSpace.js","core/space/List.js","components/home/Home.js","components/signin/Signin.js","components/signup/Signup.js","header/Header.js","core/category/Add.js","core/category/Update.js","core/space/Add.js","core/space/Update.js","core/todo/TodoNav.js","core/todo/apiTodo.js","core/space/index.js","Routes.js","index.js"],"names":["API","process","isAuthenticated","undefined","window","localStorage","getItem","JSON","parse","PrivateRoute","Component","component","rest","render","props","to","pathname","state","from","location","getCategories","userId","token","fetch","method","headers","Accept","Authorization","then","responce","json","catch","err","console","log","List","useState","categories","setCategories","user","removeItem","id","categoryId","removeCategory","data","error","useEffect","ListItem","category","className","name","onClick","class","map","c","index","getSpace","spaceId","activeSpaceId","spaces","setSpaces","loadSpaces","getSpaces","removeSpace","space","active","s","Home","Signin","email","password","loading","redirectToReferrer","values","setValues","handleChange","event","target","value","clickSubmit","preventDefault","body","stringify","next","setItem","authenticate","style","display","type","onChange","placeholder","redirectUser","Signup","success","withRouter","history","isActive","path","signout","push","cursor","Add","trim","create","alert","Update","match","update","init","getCategory","params","date","Date","toISOString","split","TodoNav","newTodo","text","beginTime","endTime","suceess","todo","rows","Space","closeModalBtn","useRef","todos","setTodos","todoId","setTodo","setSpace","loadTodos","getTodos","loadSpace","removeTodo","current","click","tabIndex","role","ref","Routes","exact","AddSpace","UpdateSpace","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98a4c0ce.chunk.js","sourcesContent":["export const API = process.env.REACT_APP_API_URL;","\r\nimport { API } from \"../Config\";\r\n\r\n\r\n\r\n// request to the server for signup\r\n//@params user = {name,email, password}\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signup`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((responce) => {\r\n        return responce.json();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n\r\n// request to the server for signin\r\n//@params user = {email, password}\r\nexport const signin = (user) => {\r\n    return fetch(`${API}/signin`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n\r\n      body: JSON.stringify(user),\r\n    })\r\n      .then((responce) => {\r\n        return responce.json();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n\r\n\r\n  //signout delete the jwt from the localstorage\r\n  //delete coockie\r\n\r\n  export const signout = (next) =>{\r\n\r\n    if(typeof window !== \"undefined\"){\r\n      localStorage.removeItem('jwt')\r\n      next();\r\n      return fetch(`${API}/signout`, {\r\n        method  : \"GET\"\r\n      }).then(responce =>{\r\n\r\n        console.log(\"signout\", responce)\r\n      }).catch(err=>{\r\n        console.log(err)\r\n      })\r\n\r\n  }\r\n  }\r\n\r\n  //set jwt to the local storage\r\n  export const authenticate = (data, next) => {\r\n\r\n    if(typeof window !== \"undefined\"){\r\n        localStorage.setItem('jwt',JSON.stringify(data))\r\n        next()\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  export const isAuthenticated = () =>{\r\n    if(typeof window === undefined){\r\n      return false;\r\n    }\r\n    if(localStorage.getItem(\"jwt\")){\r\n      return JSON.parse(localStorage.getItem(\"jwt\"))\r\n    }else{\r\n      return false;\r\n    }\r\n  }","import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) =>\r\n      isAuthenticated() ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: \"/signin\",\r\n            state: { from: props.location },\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  />\r\n);\r\nexport default PrivateRoute;","import { API } from \"../../Config\";\r\n\r\n//create new category (send request to the serveer)\r\nexport const create = (data) => {\r\n  const { userId, token, name } = data;\r\n\r\n  return fetch(`${API}/category/create/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ category: name }),\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n//get all categories for the user\r\n\r\nexport const getCategories = (userId, token) => {\r\n  return fetch(`${API}/categories/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n//delete category\r\nexport const removeCategory = (categoryId, userId, token) => {\r\n  return fetch(`${API}/category/${categoryId}/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n//get one category with a specific id\r\nexport const getCategory = (categoryId, userId, token) => {\r\n  return fetch(`${API}/category/${categoryId}/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n//update\r\nexport const update = (data) => {\r\n  const { userId, token, category } = data;\r\n\r\n  return fetch(`${API}/category/update/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ ...category }),\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { getCategories, removeCategory } from \"./apiCategory\";\r\n\r\nconst List = () => {\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  const { user, token } = isAuthenticated();\r\n\r\n\r\n  //get all categorie when the the component mount\r\n  const loadCategories = () => {\r\n    getCategories(user.id, token).then((data) => {\r\n      if (data.error) console.log(data.error);\r\n      else setCategories(data);\r\n    });\r\n  };\r\n\r\n  //delete category\r\n  const removeItem = (id) => {\r\n    removeCategory(id, user.id, token).then((data) => {\r\n      if (data.error) console.log(data.error);\r\n      else setCategories(data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  //category item to show data\r\n  const ListItem = ({ category }) => {\r\n    return (\r\n      <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n        {category.name}\r\n        <div>\r\n          <button\r\n            className=\"btn btn-danger mr-1\"\r\n            onClick={() => removeItem(category.id)}\r\n          >\r\n            <i class=\"bi bi-trash-fill\"></i>\r\n          </button>\r\n          <Link to={`/update-category/${category.id}`}>\r\n            <button className=\"btn btn-info\">\r\n              <i class=\"bi bi-pencil-fill\"></i>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n  return (\r\n    <div>\r\n      <ul className=\"list-group\">\r\n        {categories.map((c, index) => (\r\n          <ListItem category={c} key={index} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import { API } from \"../../Config\";\r\n\r\n\r\n//create new space \r\nexport const create = (data) => {\r\n  const { userId, token, space } = data;\r\n\r\n  \r\n  return fetch(`${API}/space/create/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ ...space }),\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n//update the sapce \r\nexport const update = (data) => {\r\n  const { userId, token, space } = data;\r\n\r\n  \r\n  return fetch(`${API}/space/update/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ ...space }),\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n//get all spaces \r\nexport const getSpaces = (userId, token) => {\r\n  return fetch(`${API}/spaces/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n//delete spaces\r\n\r\nexport const removeSpace = (spaceId, userId, token) => {\r\n  return fetch(`${API}/space/${spaceId}/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n//get one space\r\nexport const getSpace = (spaceId, userId, token) => {\r\n  return fetch(`${API}/space/${spaceId}/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import \"./Space.scss\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { getSpaces, removeSpace } from \"./apiSpace\";\r\n\r\nconst List = ({activeSpaceId}) => {\r\n  const [spaces, setSpaces] = useState([]);\r\n\r\n  //get user and the toke to do a request after\r\n  const { user, token } = isAuthenticated();\r\n\r\n\r\n  //load all spaces to displayed after\r\n  const loadSpaces = () => {\r\n    getSpaces(user.id, token).then((data) => {\r\n      if (data.error) console.log(data.error);\r\n      else setSpaces(data);\r\n    });\r\n  };\r\n\r\n\r\n  //delete one\r\n  const removeItem = (id) => {\r\n    removeSpace(id, user.id, token).then((data) => {\r\n      if (data.error) console.log(data.error);\r\n      else setSpaces(data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadSpaces();\r\n  }, []);\r\n\r\n\r\n  //space item showing name and delete and update data\r\n  const ListItem = ({ space , active }) => {\r\n    return (\r\n      <li className={`list-group-item d-flex justify-content-between align-items-center ${active && \" active\"}`}>\r\n        <Link to={`/space/${space.id}`}  className={`${active && \" text-white\"}`}>{space.name}</Link>\r\n        <div>\r\n          <button className=\"btn btn-danger mr-1\" onClick={() => removeItem(space.id)}>\r\n          <i class=\"bi bi-trash-fill\"></i>\r\n          </button>\r\n          <Link to={`/update-space/${space.id}`}>\r\n            <button className=\"btn btn-info\">\r\n            <i class=\"bi bi-pencil-fill\"></i>\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"list-space\">\r\n      <ul className=\"list-group\">\r\n        {spaces.map((s, index) => (\r\n          <ListItem active={activeSpaceId == s.id} space={s} key={index} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport ListCategory from \"../../core/category/List\";\r\nimport ListSpaces from \"../../core/space/List\";\r\n\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    \r\n    <div className=\"container-fluid\">\r\n      {!isAuthenticated() &&  <Redirect to=\"/signin\" /> }\r\n      <div className=\"row\">\r\n        <div className=\"col-4 \">\r\n        <div className=\"card p-3\">\r\n        <h2>Category List</h2>\r\n         {isAuthenticated() &&  <ListCategory /> }\r\n         </div>\r\n        </div>\r\n\r\n        <div className=\"col-6 offset-1   \">\r\n        <div className=\"card p-3\">\r\n        <h2>Space List</h2>\r\n         {isAuthenticated() &&  <ListSpaces /> }\r\n        </div>\r\n       \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import \"./Signin.scss\"\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { signin, authenticate, isAuthenticated } from \"../../auth\";\r\n\r\nconst Signin = () => {\r\n  //user credential\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    loading: false,\r\n    error: false,\r\n    redirectToReferrer: false,\r\n  });\r\n\r\n  const { email, password, error, loading, redirectToReferrer } = values;\r\n \r\n\r\n  //change the sate after user type somthing\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  //submit the form\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValues({ ...values, error: false, loading: true });\r\n\r\n    signin({ email, password }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, loading: false });\r\n      } else {\r\n        //after user success signin store jwt to local storage\r\n        authenticate(data, () => {\r\n          setValues({\r\n            ...values,\r\n            redirectToReferrer: true,\r\n          });\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //the signin form \r\n  const signInForm = () => (\r\n    <form >\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={handleChange(\"email\")}\r\n          className=\"form-control\"\r\n          placeholder=\"email\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handleChange(\"password\")}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"password\"\r\n        />\r\n      </div>\r\n      <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  \r\n\r\n  const redirectUser = () => {\r\n    if (isAuthenticated()) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n          <div className=\"signin\">\r\n  <h1>Log-In</h1>\r\n           \r\n            {showError()}\r\n            {signInForm()}\r\n            {redirectUser()}\r\n          </div>\r\n          \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","import \"./Signup.scss\"\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { signup } from \"../../auth\";\r\n\r\nconst Signup = () => {\r\n  //user data\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  const { name, email, password, error, success } = values;\r\n\r\n\r\n  //change sate when user type somthing\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  //submit the form\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setValues({ ...values, error: false });\r\n    signup({ name, email, password }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, success: false });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //the signup form \r\n  const signUpForm = () => (\r\n    <form>\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange(\"name\")}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"name...\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={handleChange(\"email\")}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"Email...\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={handleChange(\"password\")}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"password\"\r\n        />\r\n      </div>\r\n      <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = () => (\r\n    <div\r\n      className=\"alert alert-success\"\r\n      style={{ display: success ? \"\" : \"none\" }}\r\n    >\r\n      New Account is created please <Link to=\"/signin\">Signin</Link>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"jumbotron\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 offset-3\">\r\n        <div className=\"signup\">\r\n        <h1>Sign Up</h1>\r\n          {showSuccess()}\r\n          {showError()}\r\n          {signUpForm()}\r\n\r\n        </div>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport { signout, isAuthenticated } from \"../auth\";\r\n\r\nconst Header = ({ history }) => {\r\n\r\n  //return active if the nav-item link is the same as the url pathname\r\n  const isActive = (history, path) =>\r\n    history.location.pathname === path ? \"active\" : \"\";\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Todo\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler \"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav \">\r\n          {isAuthenticated() && (\r\n            <li className={`nav-item ${isActive(history, \"/\")}`}>\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </Link>\r\n            </li>\r\n          )}\r\n\r\n          {!isAuthenticated() && (\r\n            <Fragment>\r\n              <li className={`nav-item ${isActive(history, \"/signup\")}`}>\r\n                <Link className=\"nav-link\" to=\"/signup\">\r\n                  SingUp <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n\r\n              <li className={`nav-item ${isActive(history, \"/signin\")}`}>\r\n                <Link className=\"nav-link\" to=\"/signin\">\r\n                  Signin <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n            </Fragment>\r\n          )}\r\n\r\n          {isAuthenticated() && (\r\n            <Fragment>\r\n              <li className={`nav-item ${isActive(history, \"/add-category\")}`}>\r\n                <Link className=\"nav-link\" to=\"/add-category\">\r\n                  Add Category <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n\r\n              <li className={`nav-item ${isActive(history, \"/add-space\")}`}>\r\n                <Link className=\"nav-link\" to=\"/add-space\">\r\n                  Add space <span className=\"sr-only\">(current)</span>\r\n                </Link>\r\n              </li>\r\n            </Fragment>\r\n          )}\r\n        </ul>\r\n        {isAuthenticated() && (\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item \">\r\n              <span\r\n                className=\"nav-link\"\r\n                onClick={() => {\r\n                  signout(() => {\r\n                    history.push(\"/\");\r\n                  });\r\n                }}\r\n                style={{cursor : \"pointer\"}}\r\n              >\r\n                Signout\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withRouter(Header);\r\n","import \"./Category.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { create } from \"./apiCategory\";\r\n\r\nconst Add = () => {\r\n\r\n  //category data is just the name\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  const { name, error, success } = values;\r\n\r\n  //get user and the toke to do a request after\r\n  const { user, token } = isAuthenticated();\r\n\r\n  //handlechange changin the sate after the user write somthing\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //do not do a request if the name is empty\r\n    if (name.trim() === \"\") {\r\n      alert(\"category required\");\r\n      return;\r\n    }\r\n\r\n    setValues({ ...values, error: false });\r\n    create({ userId: user.id, token, name }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, success: false });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          name: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //form\r\n  const categoryForm = () => (\r\n    <form>\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange(\"name\")}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"name\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  //if success  redirect to home\r\n  const showSuccess = () => success && <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <div className=\"cattegory-form\">\r\n              <h1>Create Category</h1>\r\n              {showSuccess()}\r\n              {showError()}\r\n              {categoryForm()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import \"./Category.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { update, getCategory } from \"./apiCategory\";\r\n\r\nconst Update = ({ match }) => {\r\n\r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    name: \"\",\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  //category data\r\n  const { id, name, error, success } = values;\r\n\r\n  //auth\r\n  const { user, token } = isAuthenticated();\r\n\r\n  //change the state after user type\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    setValues({ ...values, error: false });\r\n    update({ userId: user.id, token, category: { id, name } }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, success: false });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n\r\n          name: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  //get all categories after the component mount\r\n\r\n  const init = (categoryId) => {\r\n    getCategory(categoryId, user.id, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        console.log(data);\r\n        setValues({\r\n          ...data,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n   \r\n\r\n    init(match.params.categoryId);\r\n  }, []);\r\n\r\n\r\n  //my form\r\n  const categoryForm = () => (\r\n    <form>\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange(\"name\")}\r\n          className=\"form-control mb-2\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={clickSubmit} className=\"btn btn-primary \">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = () => success && <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <div className=\"cattegory-form\">\r\n              <h1>Update Category</h1>\r\n              {showSuccess()}\r\n              {showError()}\r\n              {categoryForm()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","import \"./Space.scss\";\r\nimport React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { create } from \"./apiSpace\";\r\n\r\nconst Add = () => {\r\n  //space  data name and date\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    date : new Date().toISOString().split(\"T\")[0],\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  const { name,date, error, success } = values;\r\n\r\n  //get user and the toke to do a request after\r\n  const { user, token } = isAuthenticated();\r\n\r\n  //handlechange changin the sate after the user write somthing\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n\r\n\r\n//handle submit the form\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n  \r\n   \r\n    setValues({ ...values, error: false });\r\n\r\n    //call create method to do a request\r\n    create({ userId: user.id, token, space :  {name,date} }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, success: false });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          date :  \"\",\r\n          name: \"\",\r\n          error: \"\",\r\n          success: true,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  //category form to add new one\r\n  const categoryForm = () => (\r\n    <form>\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange(\"name\")}\r\n          className=\"form-control mb-2\"\r\n          placeholder=\"name..\"\r\n        />\r\n      </div>\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Date</label>\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={handleChange(\"date\")}\r\n          className=\"form-control mb-2\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = () => success && <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-6 offset-3\">\r\n        <div className=\"space-form\">\r\n      <h1>Create Space</h1>\r\n          {showSuccess()}\r\n          {showError()}\r\n          {categoryForm()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Add;\r\n","import \"./Space.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\nimport { update, getSpace } from \"./apiSpace\";\r\n\r\nconst Update = ({ match }) => {\r\n\r\n  const [values, setValues] = useState({\r\n    id: 0,\r\n    date: \"\",\r\n    name: \"\",\r\n    success: false,\r\n    error: false,\r\n  });\r\n\r\n  const { id, name, date, error, success } = values;\r\n\r\n  //get user and the toke to do a request after\r\n  const { user, token } = isAuthenticated();\r\n\r\n  //handlechange changin the sate after the user write somthing\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    //show error if name is empty\r\n    if (name.trim() === \"\") {\r\n      alert(\"name required\");\r\n      return;\r\n    }\r\n\r\n    setValues({ ...values, error: false });\r\n    //call update request\r\n    update({ userId: user.id, token, space: { id, name, date } }).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          setValues({ ...values, error: data.error, success: false });\r\n        } else {\r\n          setValues({\r\n            ...values,\r\n            date: \"\",\r\n            name: \"\",\r\n            error: \"\",\r\n            success: true,\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  //get one  space using id\r\n  const init = (spaceId) => {\r\n    getSpace(spaceId, user.id, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error });\r\n      } else {\r\n        setValues({\r\n          ...data,\r\n          date: data.date.split(\"T\")[0],\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init(match.params.spaceId);\r\n  }, []);\r\n\r\n  const spaceForm = () => (\r\n    <form>\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={handleChange(\"name\")}\r\n          className=\"form-control\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"from-group\">\r\n        <label className=\"text-muted\">Date</label>\r\n        <input\r\n          type=\"date\"\r\n          value={date}\r\n          onChange={handleChange(\"date\")}\r\n          className=\"form-control mb-2\"\r\n        />\r\n      </div>\r\n\r\n      <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  const showError = () => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = () => success && <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <div className=\"jumbotron\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-6 offset-3\">\r\n            <div className=\"space-form\">\r\n              {showSuccess()}\r\n              {showError()}\r\n              {spaceForm()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\n\r\n\r\n\r\nimport { create } from \"./apiTodo\";\r\nconst TodoNav = ({ spaceId, newTodo , categories}) => {\r\n\r\n  //todo data\r\n  const [values, setValues] = useState({\r\n    text: \"\",\r\n    categoryId: 0,\r\n    beginTime: \"12:00\",\r\n    endTime: \"12:00\",\r\n    suceess: false,\r\n    error: false,\r\n  });\r\n \r\n\r\n  //user credential\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { text, categoryId, beginTime, endTime, error, success } = values;\r\n\r\n  \r\n\r\n  //change the state\r\n  const handleChange = (name) => (event) => {\r\n    setValues({ ...values, error: false, [name]: event.target.value });\r\n  };\r\n\r\n\r\n  //handle the submit\r\n  const clickSubmit = (event) => {\r\n    event.preventDefault();\r\n    //doing nothing if user not choose a category\r\n    if (categoryId === 0) {\r\n      alert(\"select category\");\r\n      return;\r\n    }\r\n\r\n    setValues({ ...values, error: false });\r\n\r\n    //create a todo\r\n    create({\r\n      spaceId,\r\n      userId: user.id,\r\n      token,\r\n      todo: { text, categoryId, beginTime, endTime },\r\n    }).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: data.error, success: false });\r\n      } else {\r\n        setValues({\r\n          ...values,\r\n          text: \"\",\r\n          categoryId: 0,\r\n          beginTime: \"12:00\",\r\n          endTime: \"12:00\",\r\n          suceess: true,\r\n          error: false,\r\n        });\r\n        //load all todo  again to refresh the view\r\n        newTodo();\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  //todo form\r\n  const addForm = () => {\r\n    return (\r\n      <form className=\"card mb-2 mt-2 p-2\">\r\n        <select\r\n          className=\"form-control mb-1\"\r\n          onChange={handleChange(\"categoryId\")}\r\n        >\r\n          <option>select category</option>\r\n          {categories.map((c, index) => (\r\n            <option value={c.id} key={index}>\r\n              {c.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"input-group mb-1\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" >\r\n              From\r\n            </span>\r\n          </div>\r\n          <input\r\n            type=\"time\"\r\n            value={beginTime}\r\n            onChange={handleChange(\"beginTime\")}\r\n            className=\"form-control\"\r\n          />\r\n\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" >\r\n             To\r\n            </span>\r\n          </div>\r\n          <input\r\n            type=\"time\"\r\n            value={endTime}\r\n            onChange={handleChange(\"endTime\")}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Text\"\r\n            value={text}\r\n            onChange={handleChange(\"text\")}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n        <button onClick={clickSubmit} className=\"btn btn-primary mb-1\">\r\n          create todo\r\n        </button>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  return <nav>{addForm()}</nav>;\r\n};\r\n\r\nexport default TodoNav;\r\n","import { API } from \"../../Config\";\r\n\r\n\r\n//create new todo\r\nexport const create = (data) => {\r\n  const {spaceId, userId, token, todo } = data;\r\n\r\n  \r\n  return fetch(`${API}/todo/create/${spaceId}/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ todo }),\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n\r\n//update the todo data {text, category, time}\r\nexport const update = (data) => {\r\n  const { userId, token, todo } = data;\r\n  \r\n  return fetch(`${API}/todo/update/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ ...todo }),\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n//get all todo in one space\r\nexport const getTodos = (spaceId,userId, token) => {\r\n  return fetch(`${API}/todos/${spaceId}/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n\r\n\r\n//delete todo by using his id\r\nexport const removeTodo = (spaceId,todoId, userId, token) => {\r\n  return fetch(`${API}/todo/${spaceId}/${todoId}/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((responce) => {\r\n      return responce.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { isAuthenticated } from \"../../auth\";\r\n\r\nimport ListSpaces from \"../../core/space/List\";\r\nimport TodoNav from \"../todo/TodoNav\";\r\n\r\n//apis\r\nimport { getTodos, removeTodo, update } from \"../todo/apiTodo\";\r\nimport { getSpace } from \"../space/apiSpace\";\r\nimport { getCategories } from \"../category/apiCategory\";\r\n\r\nconst Space = (props) => {\r\n  //close btn of the modal\r\n  const closeModalBtn = useRef();\r\n\r\n  //todo list\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const [todo, setTodo] = useState({\r\n    todoId: 0,\r\n    text: \"\",\r\n    categoryId: 0,\r\n    beginTime: \"12:00\",\r\n    endTime: \"12:00\",\r\n    suceess: false,\r\n    error: false,\r\n  });\r\n  const [space, setSpace] = useState({\r\n    id: 0,\r\n    date: \"\",\r\n    name: \"\",\r\n  });\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  //get user and the toke to do a request after\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const { todoId, text, categoryId, beginTime, endTime, error, success } = todo;\r\n\r\n  //load all todos after create one or update one\r\n  const newTodo = () => {\r\n    loadTodos();\r\n  };\r\n\r\n  //get all todo in the space\r\n  const loadTodos = () => {\r\n    getTodos(props.match.params.spaceId, user.id, token).then((data) => {\r\n      if (data.error) {\r\n        props.history.push(\"/\");\r\n      } else setTodos(data);\r\n    });\r\n  };\r\n\r\n  //get the current space data by using spaceId params\r\n  const loadSpace = () => {\r\n    getSpace(props.match.params.spaceId, user.id, token).then((data) => {\r\n      if (data.error) {\r\n        props.history.push(\"/\");\r\n      } else setSpace(data);\r\n    });\r\n  };\r\n\r\n  //get all categories for select element\r\n  const loadCategories = () => {\r\n    getCategories(user.id, token).then((data) => {\r\n      if (data.error) console.log(data.error);\r\n      else setCategories(data);\r\n    });\r\n  };\r\n\r\n  //load data after component mount\r\n  useEffect(() => {\r\n    loadTodos();\r\n    loadSpace();\r\n    loadCategories();\r\n  }, []);\r\n\r\n  //load data after spaceId params change\r\n  useEffect(() => {\r\n    loadTodos();\r\n    loadSpace();\r\n  }, [props.match.params.spaceId]);\r\n\r\n  //delete todo from database\r\n  const removeItem = (id) => {\r\n    removeTodo(props.match.params.spaceId, id, user.id, token).then((data) => {\r\n      if (data.error) console.log(data.error);\r\n      else setTodos(data);\r\n    });\r\n  };\r\n  //\r\n  //handlechange changin the sate after the user write somthing\r\n  const handleChange = (name) => (event) => {\r\n    setTodo({ ...todo, error: false, [name]: event.target.value });\r\n  };\r\n\r\n  //update form with all inputs\r\n  const udpateForm = () => {\r\n    return (\r\n      <form className=\"card mb-2 mt-2 p-2\">\r\n        <select\r\n          className=\"form-control mb-1\"\r\n          onChange={handleChange(\"categoryId\")}\r\n          value={categoryId}\r\n        >\r\n          <option>select category</option>\r\n          {categories.map((c, index) => (\r\n            <option value={c.id} key={index}>\r\n              {c.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <div className=\"input-group mb-1\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"\">\r\n              From\r\n            </span>\r\n          </div>\r\n          <input\r\n            type=\"time\"\r\n            value={beginTime}\r\n            onChange={handleChange(\"beginTime\")}\r\n            className=\"form-control\"\r\n          />\r\n\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\" id=\"\">\r\n              To\r\n            </span>\r\n          </div>\r\n          <input\r\n            type=\"time\"\r\n            value={endTime}\r\n            onChange={handleChange(\"endTime\")}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            placeholder=\"Text\"\r\n            value={text}\r\n            onChange={handleChange(\"text\")}\r\n            rows=\"3\"\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n    );\r\n  };\r\n\r\n  //todo item with text and delete and update button\r\n  const ListItem = ({ todo }) => {\r\n    return (\r\n      <li className=\"list-group-item d-flex justify-content-between align-items-center mb-3\">\r\n        <div>\r\n          <h3>{todo.text}</h3>\r\n\r\n          <h6 className=\"text-muted\">Category : {todo.name}</h6>\r\n          <small>\r\n            <h6 className=\"text-muted\">\r\n              {todo.beginTime} To {todo.endTime}{\" \"}\r\n            </h6>\r\n          </small>\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            className=\"btn btn-danger mr-1\"\r\n            onClick={() => removeItem(todo.id)}\r\n          >\r\n            <i className=\"bi bi-trash-fill\"></i>\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn btn-info\"\r\n            onClick={() => setTodo({ ...todo, todoId: todo.id })}\r\n            data-toggle=\"modal\"\r\n            data-target=\"#updateModal\"\r\n          >\r\n            <i className=\"bi bi-pencil-fill\"></i>\r\n          </button>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  //submit the form\r\n  const clickSubmit = () => {\r\n    //select category is required\r\n    if (categoryId === 0) {\r\n      alert(\"select category\");\r\n      return;\r\n    }\r\n\r\n    setTodo({ ...todo, error: false });\r\n\r\n    //update the todo by doing a request\r\n    update({\r\n      spaceId: props.match.params.spaceId,\r\n      userId: user.id,\r\n      token,\r\n      todo: { id: todoId, text, categoryId, beginTime, endTime },\r\n    }).then((data) => {\r\n      if (data.error) {\r\n        setTodo({ ...todo, error: data.error, success: false });\r\n      } else {\r\n        setTodo({\r\n          ...todo,\r\n          text: \"\",\r\n          categoryId: 0,\r\n          beginTime: \"12:00\",\r\n          endTime: \"12:00\",\r\n          suceess: true,\r\n          error: false,\r\n        });\r\n\r\n        //clsoe the modal\r\n        closeModalBtn.current.click();\r\n        //load data to refresh the view\r\n        loadTodos();\r\n      }\r\n    });\r\n  };\r\n\r\n  //the modal\r\n  const updateModal = () => {\r\n    return (\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"updateModal\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Update Todo\r\n              </h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n            <div className=\"modal-body\">{udpateForm()}</div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                ref={closeModalBtn}\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={clickSubmit}\r\n                className=\"btn btn-primary\"\r\n              >\r\n                Save changes\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {updateModal()}\r\n      <div className=\"row\">\r\n        <div className=\"col-4\">\r\n          {isAuthenticated() && (\r\n            <ListSpaces activeSpaceId={props.match.params.spaceId} />\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"col-6\">\r\n          <TodoNav\r\n            userId={user.id}\r\n            spaceId={props.match.params.spaceId}\r\n            newTodo={newTodo}\r\n            categories={categories}\r\n          />\r\n\r\n          <div className=\"card p-3 mb-2\">\r\n            <h2 className=\"text-muted\">Todolist : {space.name}</h2>\r\n            <p className=\"text-muted\">Date : {space.date.split(\"T\")[0]}</p>\r\n          </div>\r\n\r\n          <div>\r\n            <ul className=\"list-group\">\r\n              {todos.map((todo, index) => {\r\n                return <ListItem todo={todo} key={index} />;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Space;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport PrivateRoute from \"./auth/PrivateRoute\";\r\n\r\n\r\n\r\nimport Home from \"./components/home/Home\"\r\nimport Signin from \"./components/signin/Signin\"\r\nimport Signup from \"./components/signup/Signup\"\r\n\r\nimport Header from \"./header/Header\";\r\n\r\nimport Add from \"./core/category/Add\";\r\nimport Update from \"./core/category/Update\";\r\n\r\n\r\nimport AddSpace from \"./core/space/Add\";\r\nimport UpdateSpace from \"./core/space/Update\";\r\nimport Space from \"./core/space\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n    <Header />\r\n    <div className=\"content\">\r\n       <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n\r\n        <Route path=\"/signin\"  component={Signin} />\r\n        <Route path=\"/signup\"  component={Signup} />\r\n        <PrivateRoute path=\"/add-category\" component={Add} />\r\n        <PrivateRoute path=\"/update-category/:categoryId\" component={Update} />\r\n\r\n        <PrivateRoute path=\"/add-space\" component={AddSpace} />\r\n        <PrivateRoute path=\"/update-space/:spaceId\" component={UpdateSpace} />\r\n        <PrivateRoute path=\"/space/:spaceId\" component={Space} />\r\n      </Switch>\r\n    </div>\r\n     \r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import \"./app.scss\"\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}